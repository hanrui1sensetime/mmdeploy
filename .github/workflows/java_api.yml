name: java_api

on:
  push:
    paths-ignore:
      - "tools/**"

  pull_request:
    paths-ignore:
      - "tools/**"
      - "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_java_api:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install unittest dependencies
        run: |
          python -m pip install cmake onnx
      - name: update
        run: sudo apt update
      - name: Install OpenJDK
        run: |
          wget https://download.java.net/java/GA/jdk18/43f95e8614114aeaa8e8a5fcf20a682d/36/GPL/openjdk-18_linux-x64_bin.tar.gz
          tar xvf openjdk-18_linux-x64_bin.tar.gz
          export JAVA_HOME=${PWD}/jdk-18
          export PATH=${JAVA_HOME}/bin:${PATH}
      - name: gcc-multilib
        run: sudo apt install gcc-multilib g++-multilib wget libprotobuf-dev protobuf-compiler
      - name: Install onnxruntime
        run: |
          wget https://github.com/microsoft/onnxruntime/releases/download/v1.8.1/onnxruntime-linux-x64-1.8.1.tgz
          tar -zxvf onnxruntime-linux-x64-1.8.1.tgz
          pushd onnxruntime-linux-x64-1.8.1
          export ONNXRUNTIME_DIR=${PWD}
          export LD_LIBRARY_PATH=$ONNXRUNTIME_DIR/lib:$LD_LIBRARY_PATH
          popd
      - name: Install opencv
        run: |
          sudo apt-get install libopencv-dev
      - name: Install ant
        run: |
          sudo apt-get install ant
          export ANT_HOME=/usr/share/ant
          export PATH=${ANT_HOME}/bin:${PATH}
      - name: Build opencv java
        run: |
          export OPENCV_VERSION=4.7.0
          export JAVA_AWT_INCLUDE_PATH=${JAVA_HOME}
          export JAVA_AWT_LIBRARY=${JAVA_HOME}
          export JAVA_INCLUDE_PATH=${JAVA_HOME}/include
          export JAVA_INCLUDE_PATH2=${JAVA_HOME}/include/darwin
          export JAVA_JVM_LIBRARY=${JAVA_HOME}

          git clone -b ${OPENCV_VERSION} https://github.com/opencv/opencv.git
          pushd opencv
          mkdir -p build && pushd build
          mkdir -p bin && pushd bin
          wget https://media.githubusercontent.com/media/hanrui1sensetime/mmdeploy-javaapi-testdata/master/opencv-470.jar
          popd
          mkdir -p lib && pushd lib
          wget https://media.githubusercontent.com/media/hanrui1sensetime/mmdeploy-javaapi-testdata/master/libopencv_java470.so
          popd
          export OPENCV_DIR=${PWD}
          popd

      - name: Build java class
        run: |
          pushd csrc/mmdeploy/apis/java
          javac mmdeploy/*.java
          popd
      - name: Install mmdeploy with onnxruntime backend and java api
        run: |
          mkdir -p build && pushd build
          export LD_LIBRARY_PATH=/home/runner/work/mmdeploy/mmdeploy/ncnn/install/lib/:$LD_LIBRARY_PATH
          cmake -DMMDEPLOY_BUILD_SDK=ON -DMMDEPLOY_BUILD_SDK_JAVA_API=ON -DMMDEPLOY_TARGET_BACKENDS=ort -DMMDEPLOY_CODEBASES=all -DONNXRUNTIME_DIR=~/work/mmdeploy/mmdeploy/onnxruntime-linux-x64-1.8.1  ..
          make install
          popd
      - name: Test javademo
        run: |
          pushd demo/java
          export LD_LIBRARY_PATH=/build/lib:${LD_LIBRARY_PATH}
          python .github/scripts/test_java_demo.py
          popd
